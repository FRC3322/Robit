// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "AutonShoot.h"
AutonShoot::AutonShoot() {
	shooterSpeed = 0.0;
	feederSpeed = 0.0;
	timeNeededForShooting = 0.0;
	timeNeededToAccelerate = 2.0;
	readyToShootTimestamp = 0.0;
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void AutonShoot::Initialize() {
	shooterSpeed = SmartDashboard::GetNumber("ShooterSpeed");
	feederSpeed = SmartDashboard::GetNumber("FeederSpeed");
	timeNeededForShooting = SmartDashboard::GetNumber("AutonShootDuration");
	SetTimeout(timeNeededForShooting);
	readyToShootTimestamp = Timer::GetPPCTimestamp() + timeNeededToAccelerate;
}
// Called repeatedly when this Command is scheduled to run
void AutonShoot::Execute() {
	Robot::shooter->mainMotor->Set(shooterSpeed);
	if (Timer::GetPPCTimestamp() >= readyToShootTimestamp) {
		Robot::shooter->feedMotor->Set(feederSpeed);
		Robot::shooter->flipper->Set(Relay::kReverse);
	}
}
// Make this return true when this Command no longer needs to run execute()
bool AutonShoot::IsFinished() {
	return IsTimedOut();
}
// Called once after isFinished returns true
void AutonShoot::End() {
	Robot::shooter->mainMotor->Set(0);
	Robot::shooter->feedMotor->Set(0);
	Robot::shooter->flipper->Set(Relay::kOff);
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonShoot::Interrupted() {
	End();
}
